plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'bcs.aicrm.broadcns'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2024.0.0")  // ✅ 공식적으로 호환되는 버전
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("org.springframework.boot:spring-boot-starter-hateoas")
    implementation("org.springframework.boot:spring-boot-starter-security")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4")

    // DevTools
    runtimeOnly("org.springframework.boot:spring-boot-devtools")

    // Database dependencies
    runtimeOnly("org.postgresql:postgresql")
    implementation("com.h2database:h2")

    // Lombok
    implementation("org.projectlombok:lombok")
    annotationProcessor("org.projectlombok:lombok")

    // Testing dependencies
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4")
    testImplementation("org.springframework.security:spring-security-test")

    // Swagger (Springdoc OpenAPI)
    implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2")

    // JWT
    implementation("io.jsonwebtoken:jjwt-api:0.11.0")
    implementation("io.jsonwebtoken:jjwt-impl:0.11.0")
    implementation("io.jsonwebtoken:jjwt-jackson:0.11.0")

    // Apache HttpClient
    implementation("org.apache.httpcomponents.client5:httpclient5:5.4.2")

    // JSON Simple
    implementation("com.googlecode.json-simple:json-simple:1.1.1")

    // log4jdbc
    implementation("org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16")

    // Redis
    implementation("org.springframework.boot:spring-boot-starter-data-redis")

    // Validation
    implementation("org.springframework.boot:spring-boot-starter-validation")

    // Spring Cloud
    implementation("org.springframework.cloud:spring-cloud-starter-netflix-eureka-client")
    implementation("org.springframework.cloud:spring-cloud-starter-loadbalancer")
    implementation("org.springframework.cloud:spring-cloud-starter-openfeign")
}


test {
    useJUnitPlatform()
}